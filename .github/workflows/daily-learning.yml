name: Daily Learning Note Generator

on:
  schedule:
    # Run every day at 9 AM UTC (6 AM BRT)
    - cron: '0 9 * * *'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-learning-note:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get current date
        id: date
        run: |
          echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "day_name=$(date +'%A')" >> $GITHUB_OUTPUT
          echo "year=$(date +'%Y')" >> $GITHUB_OUTPUT

      - name: Generate learning topic with Claude
        id: generate
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Define learning topics
          TOPICS=(
            "React-Server-Components-patterns"
            "TypeScript-advanced-types"
            "Next.js-performance-optimization"
            "Testing-best-practices"
            "Monorepo-architecture-patterns"
            "CSS-and-Tailwind-techniques"
            "JavaScript-ES2024-features"
            "Git-workflows-and-collaboration"
            "API-design-principles"
            "Database-optimization"
            "Security-best-practices"
            "Accessibility-standards"
            "State-management-patterns"
            "Build-tools-and-bundlers"
            "CI-CD-strategies"
          )

          # Select random topic
          RANDOM_TOPIC="${TOPICS[$RANDOM % ${#TOPICS[@]}]}"
          echo "Selected topic: $RANDOM_TOPIC"
          echo "topic=$RANDOM_TOPIC" >> $GITHUB_OUTPUT

          # Create prompt
          cat > prompt.txt << 'PROMPT_END'
          You are creating a daily learning note for a software engineer at Cloudwalk working on InfinitePay.

          Create a concise but informative learning note (200-300 words) that:
          1. Explains a key concept or pattern
          2. Provides a practical example relevant to Next.js/React/TypeScript
          3. Includes actionable tips or best practices
          4. Suggests one resource for deeper learning

          Format the response as a complete Markdown document with frontmatter (created date, tags).
          PROMPT_END

          # Call Claude API
          RESPONSE=$(curl -s https://api.anthropic.com/v1/messages \
            -H "Content-Type: application/json" \
            -H "x-api-key: $ANTHROPIC_API_KEY" \
            -H "anthropic-version: 2023-06-01" \
            -d @- << EOF
          {
            "model": "claude-3-5-sonnet-20241022",
            "max_tokens": 2048,
            "messages": [{
              "role": "user",
              "content": "$(cat prompt.txt)\n\nTopic: ${RANDOM_TOPIC//-/ }"
            }]
          }
          EOF
          )

          # Extract content
          CONTENT=$(echo "$RESPONSE" | jq -r '.content[0].text')

          if [ -z "$CONTENT" ] || [ "$CONTENT" = "null" ]; then
            echo "Error: Failed to generate content"
            echo "$RESPONSE"
            exit 1
          fi

          # Create filename
          FILENAME="Daily-Learning-${{ steps.date.outputs.today }}-${RANDOM_TOPIC}.md"

          # Write file
          echo "$CONTENT" > "$FILENAME"

          echo "filename=$FILENAME" >> $GITHUB_OUTPUT

      - name: Check if note was created
        run: |
          if [ ! -f "${{ steps.generate.outputs.filename }}" ]; then
            echo "Error: Note file was not created"
            exit 1
          fi

          echo "Successfully created: ${{ steps.generate.outputs.filename }}"
          echo "Content preview:"
          head -20 "${{ steps.generate.outputs.filename }}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Add daily learning note: ${{ steps.generate.outputs.topic }}

            Generated learning note for ${{ steps.date.outputs.day_name }}, ${{ steps.date.outputs.today }}

            ðŸ¤– Generated with Claude via GitHub Actions
          branch: daily-learning-${{ steps.date.outputs.today }}
          delete-branch: true
          title: 'ðŸ“š Daily Learning: ${{ steps.generate.outputs.topic }}'
          body: |
            ## Daily Learning Note - ${{ steps.date.outputs.day_name }}, ${{ steps.date.outputs.today }}

            **Topic:** ${{ steps.generate.outputs.topic }}

            This learning note was automatically generated by Claude AI based on technologies used in InfinitePay projects.

            ### What's included:
            - Key concepts and patterns
            - Practical examples
            - Actionable tips
            - Learning resources

            ---

            ðŸ¤– Auto-generated by GitHub Actions
            ðŸ“… Schedule: Daily at 9 AM UTC

            Review and merge to add this note to your knowledge base!
          labels: |
            learning
            automated
            documentation

      - name: Workflow summary
        run: |
          echo "## ðŸ“š Daily Learning Note Generated!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** ${{ steps.date.outputs.today }}" >> $GITHUB_STEP_SUMMARY
          echo "**Topic:** ${{ steps.generate.outputs.topic }}" >> $GITHUB_STEP_SUMMARY
          echo "**File:** ${{ steps.generate.outputs.filename }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "A pull request has been created for review." >> $GITHUB_STEP_SUMMARY
